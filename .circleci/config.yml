# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:16.13.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    working_directory: ~/organic-code
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: sudo apt-get update && sudo apt-get install git
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
  deploy:
    docker:
      - image: circleci/node::6.13.1
    working_directory: ~/organic-code
    environment:
      - NODE_ENV: production
    steps:
      - checkout
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: create a production react build
          command: npm run build
      - run:
          name: install AWS CLI (first install pip, the Python package manager)
          command: |
            sudo apt-get install python-pip python-dev
            pip install awscli
      - run:
          command: |
            aws s3 sync ~/organic-code/build $S3_BUCKET --delete
      - run:
          command: |
            aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths /index.html

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      # - test:
      #     requires:
      #       - build
      # - lint:
      #     requires:
      #       - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
